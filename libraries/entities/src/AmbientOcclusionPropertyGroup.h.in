//
//  AmbientOcclusionPropertyGroup.h
//  libraries/entities/src
//
//  Created by HifiExperiments on 6/23/24
//  Copyright 2024 Overte e.V.
//
//  Distributed under the Apache License, Version 2.0.
//  See the accompanying file LICENSE or http://www.apache.org/licenses/LICENSE-2.0.html
//  SPDX-License-Identifier: Apache-2.0
//

#ifndef hifi_AmbientOcclusionPropertyGroup_h
#define hifi_AmbientOcclusionPropertyGroup_h

#include <AmbientOcclusionTechnique.h>

#include "PropertyGroup.h"
#include "EntityItemPropertiesMacros.h"

class EntityItemProperties;
class EncodeBitstreamParams;
class OctreePacketData;
class EntityTreeElementExtraEncodeData;
class ReadBitstreamToTreeParams;
class ScriptEngine;
class ScriptValue;

/*@jsdoc
 * AmbientOcclusion is defined by the following properties:
 * @typedef {object} Entities.AmbientOcclusion
 * @property {AmbientOcclusionTechnique} technique="ssao" - The ambient occlusion technique used. Different techniques have
 *     different tradeoffs.
 * @property {boolean} jitter=false - Whether or not the ambient occlusion sampling is jittered.
 * @property {number} resolutionLevel=2 - How high the resolution of the ambient occlusion buffer should be. Higher levels
 *     mean lower resolution buffers.
 * @property {number} edgeSharpness=1.0 - How much to sharpen the edges during the ambient occlusion blurring.
 * @property {number} blurRadius=4 - The radius used for blurring, in pixels.
 * @property {number} aoRadius=1.0 - The radius used for ambient occlusion.
 * @property {number} aoObscuranceLevel=0.5 - Intensify or dim ambient occlusion.
 * @property {number} aoFalloffAngle=0.25 - The falloff angle for the AO calculation.
 * @property {number} aoSamplingAmount=0.5 - The fraction of AO samples to use, out of the maximum for each technique.
 * @property {number} ssaoNumSpiralTurns=7.0 - The angle span used to distribute the AO samples ray directions. SSAO only.
 */

class AmbientOcclusionPropertyGroup : public PropertyGroup {
public:
    ENTITY_PROPERTY_GROUP_METHODS(AmbientOcclusionPropertyGroup)

protected:

    // FIXME: On some machines, SSAO seems to be causing performance problems.  Let's default to HBAO for now and maybe
    // revisit when we have Vulkan
@AmbientOcclusion_GROUP_PROPS@

};

#endif // hifi_AmbientOcclusionPropertyGroup_h
